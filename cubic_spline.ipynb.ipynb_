{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/YanaGlad/Numerical-Methods/blob/master/cubic_spline.ipynb","timestamp":1671825855237}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"MO5npoDA6p4Z"},"outputs":[],"source":["import bisect\n","import math\n","import numpy as np"]},{"cell_type":"markdown","source":["Класс для построения кубического сплайна"],"metadata":{"id":"FJhz4vjy6y-j"}},{"cell_type":"code","source":["class Spline:\n","\n","    def __init__(self, x, y):\n","        self.b, self.c, self.d, self.w = [], [], [], []\n","\n","        self.x = x\n","        self.y = y\n","\n","        self.nx = len(x)  # размерность x\n","        h = np.diff(x)\n","\n","        # вычислим коэффициент: a\n","        self.a = [iy for iy in y]\n","\n","        # вычислим коэффициент: c\n","        A = self.__calc_matrix_A(h)\n","        B = self.__calc_matrix_B(h)\n","        self.c = np.linalg.solve(A, B)\n","\n","        # вычислим коэффициентs: b и d\n","        for i in range(self.nx - 1):\n","            # коэффициент d\n","            self.d.append((self.c[i + 1] - self.c[i]) / (3.0 * h[i]))\n","            # коэффициент b\n","            tb = (self.a[i + 1] - self.a[i]) / h[i] - h[i] * \\\n","                 (self.c[i + 1] + 2.0 * self.c[i]) / 3.0\n","            self.b.append(tb)\n","            \n","        print('a: ', self.a)    \n","        print('b: ', self.b)\n","        print('c: ', self.c)    \n","        print('d: ', self.d)\n","        \n","\n","    def calc(self, t):\n","        #если t находится за пределами диапазона по x, возвращаем None\n","        \n","        if t < self.x[0]:\n","            return None\n","        elif t > self.x[-1]:\n","            return None\n","\n","        i = self.__search_index(t)\n","        dx = t - self.x[i]\n","        result = self.a[i] + self.b[i] * dx + self.c[i] * dx ** 2.0 + self.d[i] * dx ** 3.0\n","\n","        return result\n","\n","    # 1 производная\n","    def differ(self, t):\n","\n","        if t < self.x[0]:\n","            return None\n","        elif t > self.x[-1]:\n","            return None\n","\n","        i = self.__search_index(t)\n","        dx = t - self.x[i]\n","        result = self.b[i] + 2.0 * self.c[i] * dx + 3.0 * self.d[i] * dx ** 2.0\n","        return result\n","\n","    # 2 производная\n","    def differ_2(self, t):\n","\n","        if t < self.x[0]:\n","            return None\n","        elif t > self.x[-1]:\n","            return None\n","\n","        i = self.__search_index(t)\n","        dx = t - self.x[i]\n","        result = 2.0 * self.c[i] + 6.0 * self.d[i] * dx\n","        return result\n","\n","    def __search_index(self, x):\n","        return bisect.bisect(self.x, x) - 1\n","\n","\n","    # Вычисление матрицы А для с кэффициента\n","    def __calc_matrix_A(self, h):        \n","\n","        A = np.zeros((self.nx, self.nx))\n","        A[0, 0] = 1.0\n","        for i in range(self.nx - 1):\n","            if i != (self.nx - 2):\n","                A[i + 1, i + 1] = 2.0 * (h[i] + h[i + 1])\n","            A[i + 1, i] = h[i]\n","            A[i, i + 1] = h[i]\n","\n","        A[0, 1] = 0.0\n","        A[self.nx - 1, self.nx - 2] = 0.0\n","        A[self.nx - 1, self.nx - 1] = 1.0\n","        return A\n","\n","    # Вычисление матрицы B для с кэффициента \n","    def __calc_matrix_B(self, h):\n"," \n","        B = np.zeros(self.nx)\n","        for i in range(self.nx - 2):\n","            B[i + 1] = 3.0 * (self.a[i + 2] - self.a[i + 1]) / \\\n","                       h[i + 1] - 3.0 * (self.a[i + 1] - self.a[i]) / h[i]\n","        return B\n","\n","    def calc_curvature(self, t):\n","        j = int(math.floor(t))\n","        if j < 0:\n","            j = 0\n","        elif j >= len(self.a):\n","            j = len(self.a) - 1\n","\n","        dt = t - j\n","        df = self.b[j] + 2.0 * self.c[j] * dt + 3.0 * self.d[j] * dt * dt\n","        ddf = 2.0 * self.c[j] + 6.0 * self.d[j] * dt\n","        k = ddf / ((1 + df ** 2) ** 1.5)\n","        return k"],"metadata":{"id":"QKCdnuV56xTb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"ng3P-BFb9LvJ"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","x = [ 0.1,     0.5,      0.9,     1.3,      1.7]\n","y = [-2.3026, -0.69315, -0.10536, 0.26236,  0.53063]"],"metadata":{"id":"h_tsvQFF9ci4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Моя реализация сплайн-интерполяция"],"metadata":{"id":"btj09iye9fiQ"}},{"cell_type":"code","source":["spline = Spline(x, y)\n","rx = np.arange(-2.0, 4, 0.01)\n","ry = [spline.calc(i) for i in rx]\n","\n","plt.plot(rx, ry, \"-b\", linewidth = 5, label='Сплайн-интерполяция')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"epGfnszP9e5v","outputId":"764145dc-3a0b-408c-cd88-53d5eb1ff592"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a:  [-2.3026, -0.69315, -0.10536, 0.26236, 0.53063]\n","b:  [4.672913839285713, 2.725047321428571, 0.906196875, 0.8164901785714286]\n","c:  [ 0.         -4.86966629  0.32254018 -0.54680692  0.        ]\n","d:  [-4.058055245535711, 4.3268387276785685, -0.7244559151785694, 0.4556724330357134]\n"]},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f3db2a49ac0>]"]},"metadata":{},"execution_count":5},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Библиотечная реализация сплайн интерполяции"],"metadata":{"id":"9tJ77O119yq6"}},{"cell_type":"code","source":["from scipy.interpolate import CubicSpline\n","    \n","lib_spline = CubicSpline(x, y, bc_type='natural')  \n","x_new = np.linspace(0, 4, 201)\n","y_new = lib_spline(x_new)\n","plt.plot(x_new, y_new, 'g', linestyle=':', linewidth = 3, label='Библиотечная сплайн-интерполяция') "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"2zJIyTb892U6","outputId":"fbaed8f7-6c3f-415b-80cd-0b145a61898f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f3dacc5a280>]"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(x, y, \"xr\", label='Узлы интерполяции')\n","    \n","plt.title('Интерполяция кубическими сплайнами')\n","plt.xlabel('x')\n","plt.ylabel('y')\n","plt.grid(True)\n","plt.axis(\"equal\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"M1YM3jO_9AvN","outputId":"715acba4-ae41-4a18-f881-0cbb3566f048"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.020000000000000004, 1.78, -2.4442615, 0.6722915)"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(rx, ry, \"-r\", linewidth = 5, label='Сплайн-интерполяция')\n","plt.plot(x_new, y_new, 'g', linestyle=':', linewidth = 3, label='Библиотечная сплайн-интерполяция') \n","plt.plot(x, y, \"xb\", label='Узлы интерполяции')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"cVo5Z-OEADdc","outputId":"3d57c333-1fa5-429e-a03c-75e238650dd6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["x"],"metadata":{"id":"2kV5r0ctk69k","outputId":"a4716a12-0c5f-4915-f52b-e0b10f3cd9b6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.1, 0.5, 0.9, 1.3, 1.7]"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["spline = Spline(x, y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9_1w8tDTAcKf","outputId":"14b32320-e9f5-443e-bd28-07d252fc0b63"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a:  [-2.3026, -0.69315, -0.10536, 0.26236, 0.53063]\n","b:  [4.672913839285713, 2.725047321428571, 0.906196875, 0.8164901785714286]\n","c:  [ 0.         -4.86966629  0.32254018 -0.54680692  0.        ]\n","d:  [-4.058055245535711, 4.3268387276785685, -0.7244559151785694, 0.4556724330357134]\n"]}]},{"cell_type":"code","source":["n = 5\n","xi = [0.1, 0.5, 0.9, 1.3, 1.7]\n","yi = [-2.3026, -0.69315, -0.10536, 0.26236, 0.53063]\n","x = 0.8"],"metadata":{"id":"SoiNNkObmMqz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n = 5\n","xi_2 = [0.1, 0.5, 0.9, 1.3, 1.7]\n","yi_2 = [0.0, -4.86966629,  0.32254018, -0.54680692,  0.0]\n","x = 0.8"],"metadata":{"id":"rs05-jUFonT_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["spline1 = Spline(xi, yi)"],"metadata":{"id":"yFkdAqnDowtF","outputId":"1f606c5b-4127-4a5e-e6e5-3658473e91d1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a:  [-2.3026, -0.69315, -0.10536, 0.26236, 0.53063]\n","b:  [4.672913839285713, 2.725047321428571, 0.906196875, 0.8164901785714286]\n","c:  [ 0.         -4.86966629  0.32254018 -0.54680692  0.        ]\n","d:  [-4.058055245535711, 4.3268387276785685, -0.7244559151785694, 0.4556724330357134]\n"]}]},{"cell_type":"code","source":["spline2 = Spline(xi_2, yi_2)"],"metadata":{"id":"8mdZ_N7Toexz","outputId":"0953132e-914f-4cd0-bf76-fa232b73573c","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a:  [0.0, -4.86966629, 0.32254018, -0.54680692, 0.0]\n","b:  [-20.05766839017857, 3.5928396053571436, 8.105361318749999, -3.592839605357142]\n","c:  [  0.          59.12626999 -47.84496571  18.5994634    0.        ]\n","d:  [49.271891657366055, -89.14269641183034, 55.37035758370535, -15.499552829241077]\n"]}]},{"cell_type":"code","source":["spline1.differ(0.9)"],"metadata":{"id":"01Q388Gwo1Yq","outputId":"135042f8-3ba9-41b4-b600-6626224bebf6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.906196875"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["spline2.differ(0.9)"],"metadata":{"id":"C6mRF0A1oijy","outputId":"40196eaf-95ea-4fc1-b88b-8452699eb72d","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.906196875"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["spline.differ(0.9)"],"metadata":{"id":"OeRF2zMwn3Oh","outputId":"c1eb4f34-2381-43d5-86ce-0c1f9dcd78f3","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.906196875"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":[],"metadata":{"id":"XGG9sbDjhXnB"},"execution_count":null,"outputs":[]}]}